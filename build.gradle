plugins {
    id 'java'
    id 'application'
//    id "com.github.johnrengelman.shadow" version "6.1.0"
}

group 'com.dosmike'
version '1.5.1'

repositories {
    mavenCentral()
}

targetCompatibility = '1.8'
sourceCompatibility = '1.8'

mainClassName = 'com.dosmike.spsauce.Launcher'

jar {
    manifest {
        attributes(
            'Main-Class': 'com.dosmike.spsauce.Launcher',
            // launcher agent's instrumentation instance is able to inject jars into the classloader
            'Launcher-Agent-Class': 'com.dosmike.spsauce.Launcher'
        )
    }
}

task moveArchive (type: Copy) {
    from jar
    into 'wrapper/spsauce/'
}
jar.finalizedBy moveArchive
//shadowJar.finalizedBy moveArchive

task makeMetaFile() {
    //this is not in the manifest so we can use it in the debug env
    outputs.dir sourceSets.main.resources.srcDirs.first()
    doLast {
        new File(sourceSets.main.resources.srcDirs.first(), ".spsmeta").text = "version="+project.version
    }
}
classes.dependsOn(makeMetaFile)

task makeRTdeps() {
    outputs.dir sourceSets.main.output.resourcesDir
    doLast {
        def allDeps= [] as Set
        configurations.findAll {it.canBeResolved}.each {
            allDeps += it.getResolvedConfiguration().getResolvedArtifacts().collect {art->
                art.getModuleVersion().getId()
            } collect {dep ->
                "${dep.group}:${dep.name}:${dep.version}"
            }
        }
        println ("Collected the following dependencies for runtime collection:")
        allDeps.each {println "  $it"}
        new File(sourceSets.main.output.resourcesDir, ".runtimedeps").text = allDeps.join("\n")
    }
}
jar.dependsOn(makeRTdeps)

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'

    implementation 'org.jsoup:jsoup:1.15.3' //MIT

    implementation 'org.apache.commons:commons-exec:1.3' //apache2
    implementation 'org.apache.commons:commons-compress:1.21' //apache2

    //compress algorithm support
    implementation 'org.brotli:dec:0.1.2' //MIT
    implementation 'org.tukaani:xz:1.9' //Public Domain

    implementation 'org.kohsuke:github-api:1.313' //MIT

    //script engines because of course
    implementation 'org.luaj:luaj-jse:3.0.1' //MIT
}

test {
    useJUnitPlatform()
}